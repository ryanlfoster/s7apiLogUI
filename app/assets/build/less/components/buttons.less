/**
  Element: button
  CUI button styles
*/

// Button: Default (gray)
button,
.button {
  display: inline-block;
  .border-box; // Makes 135px min-width apply consistently between anchor/button

  vertical-align: top; // Make buttons line up when placed next to each other

  min-width: 135*@px;

  margin: 0.125rem 0;  // Reset default margin on button tag
                      // Give a top/bottom margin so they stack right
  padding: 0.4375rem 1rem;
  border: @px solid;

  border-color: @button-gray-border-color;

  font-family: @font-base-family;
  font-size: @button-text-size;
  font-weight: bold;
  color: @button-text-color;
  text-decoration: none; // Reset underline on anchor
  text-align: center;

  text-shadow: 0 -1*@px 0 rgba(0, 0, 0, 0.35);

  cursor: pointer; // Give hand cursor

  .gradient(@button-gray-gradient-start-color, @button-gray-gradient-end-color);

  &:hover {
        text-decoration: none; // Reset underline on anchor
         //background: @button-gray-hover-background-color; // overrides buttons background image, favor gradient
        .gradient(@button-gray-hover-background-color, @button-gray-hover-background-color);
  }

  &:active {
    border-color: @button-gray-down-border-color;
    //background: @button-gray-down-background-color;
    .gradient(@button-gray-down-background-color, @button-gray-down-background-color);

    .box-shadow(inset 0 0 0.5rem rgba(0, 0, 0, 0.25));
  }

  &:focus {
    .glow();
    text-decoration: none;
  }
  
  // A square button for buttons attached to form fields with icons in them
  &.square {
    .button-square;
  }
}


// Button: Primary (blue)
button.primary:not(.disabled):not([disabled]),
.button.primary:not(.disabled):not([disabled]) {
  border-color: @button-blue-border-color;

  .gradient(@button-blue-gradient-start-color, @button-blue-gradient-end-color);

    &.primary {
        &:hover {
        //background: @button-blue-hover-background-color; // overrides buttons background image, favor gradient
            .gradient(@button-blue-hover-background-color, @button-blue-hover-background-color);
        }
    }

  &:active {
    border-color: @button-blue-down-border-color;
    //background: @button-blue-down-background-color;
    .gradient(@button-blue-down-background-color, @button-blue-down-background-color);
  }
  
  &:focus {
    .glow(@focus-glow-radius*1.25, darken(@focus-glow-color, 2%), darken(@focus-border-color, 20%));
  }
}


// Button: Warning (red)
button.warning:not(.disabled):not([disabled]),
.button.warning:not(.disabled):not([disabled]) {
  border-color: @button-red-border-color;

  .gradient(@button-red-gradient-start-color, @button-red-gradient-end-color);

    &.warning {
        &:hover {
        //background: @button-red-hover-background-color; // overrides buttons background image, favor gradient
            .gradient(@button-red-hover-background-color, @button-red-hover-background-color);
        }
    }

  &:active {
    border-color: @button-red-down-border-color;
    //background: @button-red-down-background-color; // overrides buttons background image, favor gradient
    .gradient(@button-red-down-background-color, @button-red-down-background-color);
  }
  
  &:focus {
    .glow();
  }
}

// Button: Disabled
button.disabled,
button[disabled],
.button.disabled,
button.disabled:active,
button[disabled]:active,
.button.disabled:active,
button.disabled:hover,
button[disabled]:hover,
.button.disabled:hover {
    cursor: default;

    border-color: @button-disabled-border-color;

    color: @button-disabled-text-color;
    text-shadow: none;
    .box-shadow(none);

    background: @button-disabled-background-color;
}

// Button groups

.button-group {
  font-size: 0;
  
  button,
  .button {
      .gradient(@selector-gradient-start-color, @selector-gradient-end-color);
      border: @px solid @selector-border-color;
      color: @font-base-color;
      text-shadow: none;
      font-weight: normal;
      font-size: @button-text-size;
      min-width: 50 * @px;

      &:focus {
        z-index: 1; // Force glow to front of button line
        position: relative;
      }
      &:hover {
          .gradient(@selector-gradient-start-color, @selector-gradient-start-color);  
      }
      
      i[class^="icon-"],
      i[class*=" icon-"] {
        margin-right: 0; // Margin does not display well in buttons without text
        &:before {
          color: @icon-color;
          opacity: @icon-opacity;
          
        }
      }
  }
  
  button:not(:first-child),
  .button:not(:first-child) {
    margin-left: -@px;
  }
}
